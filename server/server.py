import os
from dotenv import load_dotenv
from flask import Flask, request, jsonify
from flask_cors import CORS
from pymongo import MongoClient, DESCENDING
import logging

load_dotenv()

app = Flask(__name__)
CORS(app)

# Connect to MongoDB Atlas
MONGO_USER = os.getenv("MONGO_USER")
MONGO_PASSWORD = os.getenv("MONGO_PASSWORD")
MONGO_DBNAME = os.getenv("MONGO_DBNAME")
MONGO_CONNECTION_STRING = f"mongodb+srv://{MONGO_USER}:{MONGO_PASSWORD}@{MONGO_DBNAME}"
client = MongoClient(MONGO_CONNECTION_STRING)
db = client["cves"]
cves = db["cves"]
# Create unique index based on cve id
cves.create_index([('cve', DESCENDING)], name='cve_index', unique=True)

# Logging
logging.basicConfig(filename='app.log', filemode='w', format='%(name)s - %(levelname)s - %(message)s')

@app.route("/cve", methods=["PUT"])
def add_cve():
    try:
        cve_data = request.get_json()
        if 'cve' not in cve_data or 'prerequisites' not in cve_data:
            raise ValueError("The json need to have 'cve' and 'prerequisites' keys")
        # Insert cve data into MongoDB
        cves.insert_one(cve_data)
        return jsonify({"message": "CVE data added successfully"})
    except Exception as e:
        logging.error(e)
        return jsonify({"error": str(e)}), 400

@app.route("/<cve_id>", methods=["GET"])
def get_cve(cve_id):
    try:
        cve = cves.find_one({"cve": cve_id})
        if cve is None:
            raise ValueError(f"CVE with id {cve_id} not found")
        # Return cve data as JSON
        cve.pop("_id")
        return jsonify(cve)
    except Exception as e:
        logging.error(e)
        return jsonify({"error": str(e)}), 404

if __name__ == '__main__':
    app.run(debug=True)
