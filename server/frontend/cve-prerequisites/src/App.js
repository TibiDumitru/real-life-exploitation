import logo from './logo.svg';
import './App.css';
import React, {useState} from 'react';
import {addCve, getCve} from './api';

function App() {
  const [cve, setCve] = useState({ cve: '', cveName: '', prerequisites: [] });
  const [formData, setFormData] = useState({
    cve: '',
    cveName: '',
    prerequisites: [],
  });

  const [prereqFormData, setPrereqFormData] = useState({
    type: '',
    registry: {
      path: '',
      key: '',
      value: '',
      description: '',
    },
    service: {
      name: '',
      state: '',
      description: '',
    },
  });

  const handleAddPrereq = (e) => {
    e.preventDefault();

    let prereq = {};
    if (prereqFormData.type === 'registry') {
      prereq = {
        type: prereqFormData.type,
        registry: {
          path: prereqFormData.registry.path,
          key: prereqFormData.registry.key,
          value: prereqFormData.registry.value,
          description: prereqFormData.registry.description,
        },
      };
    } else if (prereqFormData.type === 'service') {
      prereq = {
        type: prereqFormData.type,
        service: {
          name: prereqFormData.service.name,
          state: prereqFormData.service.state,
          description: prereqFormData.service.description,
        },
      };
    }

    setFormData({
      ...formData,
      prerequisites: [...formData.prerequisites, prereq],
    });
  };

  const handleAddCve = (e) => {
    e.preventDefault();
    addCve(formData).then((response) => {
      console.log(response);
    });
  };

  const handleChange = (e) => {
    if (e.target.name === 'type') {
      setPrereqFormData({ ...prereqFormData, [e.target.name]: e.target.value });
    } else if (e.target.name === 'cve') {
      setFormData({ ...formData, [e.target.name]: e.target.value });
    } else if (e.target.name === 'cveName') {
      setFormData({ ...formData, [e.target.name]: e.target.value });
    } else {
      setPrereqFormData({
        ...prereqFormData,
        [prereqFormData.type]: { ...prereqFormData[prereqFormData.type], [e.target.name]: e.target.value },
      });
    }
  };

  return (
  <div>
    <form onSubmit={handleAddPrereq}>
      <label>
        Type:
        <select name="type" value={prereqFormData.type} onChange={handleChange}>
          <option value="">Select type</option>
          <option value="registry">Registry</option>
          <option value="service">Service</option>
        </select>
      </label>
      {prereqFormData.type === 'registry' && (
        <div>
          <label>
            Path:
            <input
              type="text"
              name="path"
              value={prereqFormData.registry.path}
              onChange={handleChange}
            />
          </label>
          <label>
            Key:
            <input
              type="text"
              name="key"
              value={prereqFormData.registry.key}
              onChange={handleChange}
            />
          </label>
          <label>
            Value:
            <input
              type="text"
              name="value"
              value={prereqFormData.registry.value}
              onChange={handleChange}
            />
          </label>
          <label>
            Description:
            <input
              type="text"
              name="description"
              value={prereqFormData.registry.description}
              onChange={handleChange}
            />
          </label>
        </div>
      )}
      {prereqFormData.type === 'service' && (
        <div>
          <label>
            Name:
            <input
              type="text"
              name="name"
              value={prereqFormData.service.name}
              onChange={handleChange}
            />
          </label>
          <label>
            State:
            <input
              type="text"
              name="state"
              value={prereqFormData.service.state}
              onChange={handleChange}
            />
          </label>
          <label>
            Description:
            <input
              type="text"
              name="description"
              value={prereqFormData.service.description}
              onChange={handleChange}
            />
          </label>
        </div>
      )}
      <button type="submit">Add prerequisite</button>
    </form>
    <ul>
      {formData.prerequisites.map((prereq, index) => (
        <li key={index}>{JSON.stringify(prereq)}</li>
      ))}
    </ul>
    <form onSubmit={handleAddCve}>
      <label>
        CVE:
        <input type="text" name="cve" value={formData.cve} onChange={handleChange} />
      </label>
      <label>
        CVE Description:
        <input type="text" name="cveName" value={formData.cveName} onChange={handleChange} />
      </label>
      <button type="submit">Add CVE</button>
    </form>
  </div>
);
}

export default App;
